precision highp float;
varying highp vec2 textureCoordinate;
uniform sampler2D inputImageTexture;
uniform sampler2D SamplerTableTex1;

const vec2 vignetteCenter = vec2(0.5, 0.5);   // the center for the vignette in tex coords (defaults to 0.5, 0.5)

uniform float vignetteStart;
uniform float vignetteRange;

vec3 tableLookUp(vec3 src, sampler2D table)
{
 src.r = texture2D(table, vec2(src.r, 0.0)).r;
 src.g = texture2D(table, vec2(src.g, 0.0)).g;
 src.b = texture2D(table, vec2(src.b, 0.0)).b;
 return src;
}

void main()
{
    vec3 src = texture2D(inputImageTexture, textureCoordinate).rgb;
    float lum = dot(src, vec3(0.299, 0.587, 0.114));
    src = vec3(lum, lum, lum);
    float d = distance(textureCoordinate, vignetteCenter);
    float percent = clamp((d - vignetteStart)/vignetteRange, 0.0, 1.0);
    src *= 1.0 -percent * percent;

    src = tableLookUp(src, SamplerTableTex1);
    gl_FragColor = vec4(src, 1.0);
}
precision mediump float;
varying highp vec2 textureCoordinate;
uniform sampler2D inputImageTexture;
uniform sampler2D SamplerTableTex1;
uniform sampler2D SamplerTableTex2;
uniform sampler2D SamplerBackTex1;
uniform mediump float strength;

vec3 tableLookUp(vec3 src, sampler2D table)
{
    src.r = texture2D(table, vec2(src.r, 0.0)).r;
    src.g = texture2D(table, vec2(src.g, 0.0)).g;
    src.b = texture2D(table, vec2(src.b, 0.0)).b;
    return src;
}

vec3 mixes(vec3 src, vec3 dst, vec3 alphas)
{
    src.r = mix(src.r, dst.r, alphas.r);
    src.g = mix(src.g, dst.g, alphas.g);
    src.b = mix(src.b, dst.b, alphas.b);
    return src;
}

vec3 specialTrans(vec3 src)
{
    if(src.r > 0.5) src.r += 1.0 / 256.0;
    if(src.g > 0.5) src.g += 1.0 / 256.0;
    if(src.b > 0.5) src.b += 1.0 / 256.0;
    return src;
}

vec3 prcSaturate50(vec3 src)
{
return src * mat3{
    0.650, 0.1495, 0.1495,
    0.2935, 0.7935, 0.2935,
    0.057, 0.057, 0.557
};
}

void main(void)
{
    vec3 src = texture2D(inputImageTexture, textureCoordinate).rgb;
    vec4 tex = texture2D(inputImageTexture, textureCoordinate);
    
    src = prcSaturate50(src);

    vec3 dst_a = tableLookUp(src, SamplerTableTex1);
    vec3 dst_b = tableLookUp(src, SamplerTableTex2);
    
    
    
    vec3 dst = mixes(dst_a, dst_b, specialTrans(tex.rgb * tex.a));
    
    gl_FragColor = vec4(mix(src, dst, strength),1.0);
}
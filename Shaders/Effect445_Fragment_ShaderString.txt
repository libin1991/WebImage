precision mediump float;
varying highp vec2 textureCoordinate;
uniform sampler2D inputImageTexture;
uniform sampler2D SamplerBackTex1;
uniform sampler2D SamplerBackTex2;
uniform sampler2D SamplerTableTex1;
uniform float strength;

vec3 tableLookUp(vec3 src, sampler2D table)
{
 src.r = texture2D(table, vec2(src.r, 0.0)).r;
 src.g = texture2D(table, vec2(src.g, 0.0)).g;
 src.b = texture2D(table, vec2(src.b, 0.0)).b;
 return src;
}

 vec3 multiply(vec3 src1, vec3 src2, float alpha)
 {
     return mix(src1, src1 * src2, alpha);
 }

float getLumValue(vec3 src)
{
    return 0.299 * src.r + 0.589 * src.g + 0.114 * src.b;
}

vec3 getLum(vec3 src, float l)
{
 src += l - getLumValue(src);
 return clamp(src, 0.0, 1.0);
}

vec3 Color(vec3 src1, vec3 src2, float alpha)
{
 return mix(src1, getLum(src2, getLumValue(src1)), alpha);
}

void main()
{
    vec3 src = texture2D(inputImageTexture, textureCoordinate).rgb;
    vec4 tex1 = texture2D(SamplerBackTex1, textureCoordinate);
    vec4 tex2 = texture2D(SamplerBackTex2, textureCoordinate);
    src = tableLookUp(src, SamplerTableTex1);
    src = Color(src, tex1.rgb, tex1.a * 0.19);
    src = multiply(src, tex2.rgb, tex2.a * 0.5);
    gl_FragColor = vec4(src, 1.0);
}
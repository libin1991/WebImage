precision mediump float;
varying highp vec2 textureCoordinate;
uniform sampler2D inputImageTexture;
uniform sampler2D SamplerFrameTexC;

uniform float widthStep;
uniform float heightStep;
uniform float originAspectRatio;

const vec2 cardSize = vec2(1936.0, 2592.0);
const vec2 start = vec2(120.0, 190.0) / cardSize;
const vec2 range = vec2(1696.0, 1696.0) / cardSize;
const vec2 end = start + range;
uniform float align;

void main(void)
{
    vec2 scale;
    vec2 stepsStart;
    
    if(textureCoordinate.x >= start.x && textureCoordinate.x <= end.x
        && textureCoordinate.y >= start.y && textureCoordinate.y <= end.y)
    {
        vec2 coord = textureCoordinate;// / vec2(widthStep, heightStep);
        if(originAspectRatio > 1.0)
        {
            coord /= vec2(originAspectRatio, 1.0);
            stepsStart = vec2((1.0 - 1.0 / originAspectRatio)/2.0, 0.0);
            gl_FragColor = texture2D(inputImageTexture, (coord+align*stepsStart*range-vec2(start.x / originAspectRatio, start.y))/range);
        }
        else
        {
            coord *= vec2(1.0, originAspectRatio);
            stepsStart = vec2(0.0, (1.0 - originAspectRatio)/2.0);
            gl_FragColor = texture2D(inputImageTexture, (coord+align*stepsStart*range-vec2(start.x, start.y * originAspectRatio))/range);
        }        
    }
    else
    {
        gl_FragColor = texture2D(SamplerFrameTexC, textureCoordinate);
    }
}
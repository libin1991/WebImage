precision mediump float;
varying highp vec2 textureCoordinate;
uniform sampler2D inputImageTexture;
uniform sampler2D SamplerBackTex1;

 vec3 screen(vec3 src1, vec3 src2, float alpha)
 {
     return mix(src1, src1 + src2 - src1 * src2, alpha);
 }

 float getLumValue(vec3 src)
 {
     return 0.299 * src.r + 0.589 * src.g + 0.114 * src.b;
 }

 vec3 getLum(vec3 src, float l)
 {
     src += l - getLumValue(src);
     return clamp(src, 0.0, 1.0);
 }

 vec3 Color(vec3 src1, vec3 src2, float alpha)
 {
     return mix(src1, getLum(src2, getLumValue(src1)), alpha);
 }

void main(void)
{   
    vec3 src = texture2D(inputImageTexture, textureCoordinate).rgb;
    vec4 tex = texture2D(SamplerBackTex1, textureCoordinate);

    src = screen(src, src, 1.0);
    src = mix(src, tex.rgb, tex.a * 0.51);
    src = Color(src, vec3(0.4274, 0.2353, 0.0823), 0.34);
    gl_FragColor = vec4(src,1.0);
}
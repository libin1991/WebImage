precision mediump float;
varying highp vec2 textureCoordinate;
uniform sampler2D inputImageTexture;
uniform sampler2D SamplerTableTex1;
uniform sampler2D SamplerBackTex1;

uniform float strength;

vec3 tableLookUp(vec3 src, sampler2D table)
{
 src.r = texture2D(table, vec2(src.r, 0.0)).r;
 src.g = texture2D(table, vec2(src.g, 0.0)).g;
 src.b = texture2D(table, vec2(src.b, 0.0)).b;
 return src;
}
vec3 blackWhite(vec3 src)
{
 float f = (max(max(src.r, src.g), src.b) + min(min(src.r, src.g), src.b)) / 2.0;
 return vec3(f, f, f);
}

 vec3 colorBurn(vec3 src1, vec3 src2, float alpha)
 {
     /// plus 0.00003 to avoid dividing by float zero
     return mix(src1, 1.0 - min((1.0 - src1) / (src2 + 0.00003), 1.0), alpha);
 }

void main()
{
    vec3 src = texture2D(inputImageTexture, textureCoordinate).rgb;
    vec4 tex = texture2D(SamplerBackTex1, textureCoordinate);
    src = blackWhite(src);
    src = tableLookUp(src, SamplerTableTex1);
    src = colorBurn(src, tex.rgb, tex.a * 0.3);
    gl_FragColor = vec4(src, 1.0);
}
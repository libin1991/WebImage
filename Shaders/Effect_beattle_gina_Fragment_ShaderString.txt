precision mediump float;
varying highp vec2 textureCoordinate;
uniform sampler2D inputImageTexture;

uniform sampler2D SamplerTableTex1;
uniform sampler2D SamplerTableTex2;

uniform sampler2D SamplerBackTex1;
uniform sampler2D SamplerBackTex2;

vec3 tableLookUp(vec3 src, sampler2D table)
{
    src.r = texture2D(table, vec2(src.r, 0.0)).r;
    src.g = texture2D(table, vec2(src.g, 0.0)).g;
    src.b = texture2D(table, vec2(src.b, 0.0)).b;
    return src;
}

vec3 screen(vec3 src1, vec3 src2, float alpha)
{
    return mix(src1, src1 + src2 - src1 * src2, alpha);
}

vec3 lightens(vec3 src1, vec3 src2, vec3 alphas)
{
    src1.r = mix(src1.r, src2.r, alphas.r);
    src1.g = mix(src1.g, src2.g, alphas.g);
    src1.b = mix(src1.b, src2.b, alphas.b);
    
    return src1;
}

void main()
{
    vec3 src = texture2D(inputImageTexture, textureCoordinate).rgb;
    vec4 tex1 = texture2D(SamplerBackTex1, textureCoordinate);
    vec4 tex2 = texture2D(SamplerBackTex2, textureCoordinate);
    
    vec3 tmp = tableLookUp(src, SamplerTableTex1);
    tmp = screen(tmp, tex1.rgb, tex1.a);  //Beattle_Src
    
    src = tableLookUp(src, SamplerTableTex2);
    
    src = lightens(tmp, src, tex2.rgb * tex2.a);
    
    gl_FragColor = vec4(src, 1.0);
}